
const htmlmin = require('html-minifier-terser');
const markdownIt = require('markdown-it');
const markdownItAnchor = require('markdown-it-anchor');
const pluginTOC = require('@uncenter/eleventy-plugin-toc');
const CleanCSS = require("clean-css");
const { EleventyI18nPlugin } = require("@11ty/eleventy");

module.exports = function (config) {

    config.addPlugin(EleventyI18nPlugin, {
		// any valid BCP 47-compatible language tag is supported
		defaultLanguage: "en", // Required, this site uses "en"
        errorMode: "allow-fallback", 
	});

    config.addPlugin(pluginTOC, {wrapper: e => e, ul: true});

    config.setLibrary('md', markdownIt({html: true}).use(markdownItAnchor));

    config.addTemplateFormats('css');

    config.addPassthroughCopy("img");

    config.addFilter("cssmin", function(code) {
        return new CleanCSS({}).minify(code).styles;
      });

    config.addTransform('html-minify', (content, path) => {
        if (path && path.endsWith('.html')) {
            return htmlmin.minify(
                content, {
                    collapseBooleanAttributes: true,
                    collapseWhitespace: true,
                    decodeEntities: true,
                    includeAutoGeneratedTags: false,
                    removeComments: true,
                }
            );
        }
    
        return content;
    });

	return {
		dir: {
			includes: "includes",
			layouts: "layouts",
		},
	};
};